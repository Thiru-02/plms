Exercise: Running a Shell Script on a Remote System Using SSH
Consider two systems:
1.	Local system [ initiate SSH connection ]
2.	Remote system – identify IP address, where the shell script will be executed
Steps:
1.	Open your terminal on the local system and generate an SSH key pair : ssh-keygen -t rsa -b 2048
2.	Save the keys to the default location (~.ssh/id_rsa)
3.	Copy the public key to the remote system: ssh-copy-id username@remote_ip_address
4.	Create a shell script on the remote system 
5.	Echo “hello SSH” and save it as a shell script
6.	Run the shell script from your local system using SSH: ssh username@remote_ip_address 'bash ~/test_script.sh'
7.	Check the output
Install the SSH Plugin in Jenkins:
•	Go to Manage Jenkins > Manage Plugins > Available.
•	Search for and install the SSH plugin (if not already installed).
Configure SSH in Jenkins:
•	Go to Manage Jenkins > Configure System.
•	Scroll down to the SSH remote hosts section and click Add.
•	Enter the following details:
o	Name: A name for this SSH configuration.
o	Hostname: The IP address of your remote system.
o	Username: The username to log into the remote system.
o	Private Key: Click Add and enter your private key (from ~/.ssh/id_rsa on your local system).
•	Click Save to save your SSH configuration.
Create a Jenkins Job to Run the Script via SSH:
•	Create a new Freestyle project in Jenkins.
•	Under Build, click Add build step > Execute shell.
•	


